---
apiVersion: karpenter.k8s.aws/v1
# https://karpenter.sh/docs/concepts/nodeclasses/
# https://github.com/aws/karpenter/tree/main/examples
kind: EC2NodeClass
metadata:
  name: default
  namespace: ${namespace}
spec:
  # required, resolves a default ami and userdata
  amiFamily: AL2
  #amiFamily: AL2           
  
  # required, discovers subnets to attach to instances
  subnetSelectorTerms:          
    - tags:
        karpenter.sh/discovery: ${cluster}
    - id: ${subnet_id_1}
  
  # required, discovers security groups to attach to instances
  securityGroupSelectorTerms:   
    - tags:
        #karpenter.sh/discovery: "app-cluster"
        kubernetes.io/cluster/${cluster}: "owned"
        #karpenter.sh/discovery: {cluster}
    

        
  # required, IAM role to use for the node identity
  role: "KarpenterNodeRole-${cluster}"

  #instanceProfile: "KarpenterNodeInstanceProfile-${cluster}"

  # optional, discovers amis to override the amiFamily's default

  amiSelectorTerms:             
    - tags:
        Name: "${ami_name}"    ## UPDATE THIS NAME AFTER CREATING NEW AMIs

  #amiSelectorTerms:             
    #- tags:
    #    karpenter.sh/discovery: "app-cluster"
  
  # optional, overrides autogenerated userdata with a merge semantic
  #userData: |                   
    #echo "Hello world"

  # optional, propagates tags to underlying EC2 resources
  #tags:                  
    #team: team-a
    #app: team-a-app
  
  # optional, configures IMDS for the instance
  #metadataOptions:
    #httpEndpoint: enabled
    #httpProtocolIPv6: disabled
    #httpPutResponseHopLimit: 2
    #httpTokens: required

  # optional, configures storage devices for the instance
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 10Gi
        volumeType: gp2
        #iops: 10000
        encrypted: true
        #kmsKeyID: "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"
        deleteOnTermination: true
        #throughput: 125
        #snapshotID: snap-0123456789

  # optional, configures detailed monitoring for the instance
  #detailedMonitoring: true
  detailedMonitoring: false
status:
  # resolved subnets
  subnets:
    - id: ${subnet_id_1}
      zone: ${az_zone_1}
    - id: 	${subnet_id_2}
      zone: ${az_zone_2}
    #- id: subnet-0727ef01daf4ac9fe
    #  zone: us-east-2b
    #- id: subnet-00c99aeafe2a70304
    #  zone: us-east-2a
    #- id: subnet-023b232fd5eb0028e
    #  zone: us-east-2c
    #- id: subnet-03941e7ad6afeaa72
    #  zone: us-east-2a
  
  # resolved security groups
  securityGroups:
    - id: ${sg_id}
      ####name: {sg_name}
    #- id: sg-0286715698b894bca
    #  name: ControlPlaneSecurityGroup-1AQ073TSAAPW

  # resolved AMIs 
  amis:
    - id: ${ami_id}         # ami-053503c5d626f2928
      name: ${ami_name}  # amazon-eks-node-1.28-v20231027
      #requirements:
      #  - key: kubernetes.io/arch
      #    operator: In
      #    values:
      #      - amd64
    #- id: ami-01234567890123456
    #  name: custom-ami-arm64
    #  requirements:
    #    - key: kubernetes.io/arch
    #      operator: In
    #      values:
    #        - arm64
  
  # generated instance profile name
  instanceProfile: "${cluster}_6795124765534763251"
  conditions:
    - lastTransitionTime: "2024-02-02T19:54:34Z"
      status: "True"
      type: InstanceProfileReady
    - lastTransitionTime: "2024-02-02T19:54:34Z"
      status: "True"
      type: SubnetsReady
    - lastTransitionTime: "2024-02-02T19:54:34Z"
      status: "True"
      type: SecurityGroupsReady
    - lastTransitionTime: "2024-02-02T19:54:34Z"
      status: "True"
      type: AMIsReady
    - lastTransitionTime: "2024-02-02T19:54:34Z"
      status: "True"
      type: Ready