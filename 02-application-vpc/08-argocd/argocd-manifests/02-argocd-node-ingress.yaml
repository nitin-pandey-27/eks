# Annotations Reference: https://kubernetes-sigs.github.io/aws-load-balancer-controller/latest/guide/ingress/annotations/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${ingress-argocd}
  namespace: ${namespace}
  annotations:
    # Load Balancer Name
    alb.ingress.kubernetes.io/load-balancer-name: demo-argocd
    # Ingress Core Settings
    #kubernetes.io/ingress.class: "alb" (OLD INGRESS CLASS NOTATION - STILL WORKS BUT RECOMMENDED TO USE IngressClass Resource)
    alb.ingress.kubernetes.io/scheme: internet-facing
    #alb.ingress.kubernetes.io/scheme: internal
    # Health Check Settings
    #alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    #alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    #Important Note:  Need to add health check path annotations in service level if we are planning to use multiple targets in a load balancer    
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'  
    ## Tags 
    alb.ingress.kubernetes.io/tags: Terraform=true,load-balancer-name=demo-argocd
    ## SSL Settings
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: ${certificate_arn}
    #alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01 #Optional (Picks default if not used)    
    # SSL Redirect Setting
    # alb.ingress.kubernetes.io/ssl-redirect: '443'
    # Target Type: IP (Defaults to Instance if not specified)
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/group.name: demo-argocd
    alb.ingress.kubernetes.io/group.order: '10'
    # WAF ARN 
    # alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:sa-east-1:278671418314:regional/webacl/waf-managed-rule-alb/1623ad53-00a7-4703-b243-e606320b7f8a
    # Authentication
    # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/examples/cognito-ingress-template.yaml
    alb.ingress.kubernetes.io/auth-type: oidc
    alb.ingress.kubernetes.io/auth-idp-cognito: '{"userPoolARN":"${userPoolARN}","userPoolClientID":"${userPoolClientID}","userPoolDomain":"${userPoolDomain}"}'
    #alb.ingress.kubernetes.io/auth-on-unauthenticated-request: authenticate
    #alb.ingress.kubernetes.io/auth-scope: 'email openid profile phone'
    alb.ingress.kubernetes.io/auth-scope: 'openid'
    alb.ingress.kubernetes.io/auth-idp-oidc: '{"issuer":"https://cognito-idp.${aws_region}.amazonaws.com/${userPoolID}","authorizationEndpoint":"https://${userPoolDomain}.auth.${aws_region}.amazoncognito.com/oauth2/authorize","tokenEndpoint":"https://${userPoolDomain}.auth.${aws_region}.amazoncognito.com/oauth2/token","userInfoEndpoint":"https://${userPoolDomain}.auth.${aws_region}.amazoncognito.com/oauth2/userInfo","secretName":"my-argocd-secret"}'
    alb.ingress.kubernetes.io/auth-session-timeout: '100'
    ## Deletion Protection
    alb.ingress.kubernetes.io/load-balancer-attributes: deletion_protection.enabled=false
spec:
  ingressClassName: ${ingressClassName}   # Ingress Class                  
  #defaultBackend:
    #service:
      #name: argocd-server-node-port
      #port:
        #number: 443     
  rules:
    - host: ${argocd_host}
      http: 
    #- http:
        paths:      
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ${service-name}
                port: 
                  number: 443
